version: '3'

services:
#  backend:
#    build:
#      context: ./docker/web
#    container_name: backend
##    command: bash -c 'python manage.py migrate
##                      && source create_superuser.sh
##                      && python manage.py runserver 0.0.0.0:8000'
#    command: python manage.py runserver 0.0.0.0:8000
#    volumes:
#      - ./app/:/usr/src/app/
#    ports:
#      - '8000:8000'
#    expose:
#      - '8000'
#    env_file:
#      - ./env.backend
#    depends_on:
#      - db

#  migration:
#    build: .
#    container_name: migration
#    command: python manage.py migrate
#    volumes:
#      - ./app/:/usr/src/app/
#    env_file:
#      - ./.env
#    environment:
#      - POSTGRES_USER=$${DB_USER}
#      - POSTGRES_PASSWORD=$${DB_PASSWORD}
#      - POSTGRES_DB=$${DB_NAME}
#    depends_on:
#      - db
#        - condition: ['service_healty']
#    expose:
#      - '8001'
#    ports:
#      - '8001:8001'

  db:
    build: ./docker/db
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./docker/db/movies_database.sql:/docker-entrypoint-initdb.d/
    env_file:
      - ./.env.postgres
#    environment:
#      - POSTGRES_DB=$${DB_NAME}
#      - POSTGRES_USER=$${DB_USER}
#      - POSTGRES_PASSWORD=$${DB_PASSWORD}

# nginx:
#    image: nginx:1.19.2
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf:ro
#    depends_on:
#      - backend
#    ports:
#      - '80:80'

volumes:
  postgres_data:
